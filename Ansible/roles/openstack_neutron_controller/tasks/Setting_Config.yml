---
- name: Setting_Config(neutron.conf DEFAULT)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[DEFAULT"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller DEFAULT)"
    block: |
      core_plugin = ml2
      service_plugins = router
      allow_overlapping_ips = True
      rpc_backend = rabbit
      auth_strategy = keystone
      notify_nova_on_port_status_changes = True
      notify_nova_on_port_data_changes = True
    state: present

- name: Setting_Config(neutron.conf database)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[database"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller database)"
    block: |
      connection = mysql+pymysql://neutron:{{ openstack_neutron_controller.neutron_dbpass }}@{{ openstack_neutron_controller.controller }}/neutron
    state: present

- name: Setting_Config(neutron.conf oslo_messaging_rabbit)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[oslo_messaging_rabbit"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller oslo_messaging_rabbit)"
    block: |
      rabbit_host = {{ openstack_neutron_controller.controller }}
      rabbit_userid = openstack
      rabbit_password = {{ openstack_neutron_controller.rabbitmq_pass }}
    state: present

- name: Setting_Config(neutron.conf keystone_authtoken)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[keystone_authtoken"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller keystone_authtoken)"
    block: |
      auth_uri = http://{{ openstack_neutron_controller.controller }}:5000
      auth_url = http://{{ openstack_neutron_controller.controller }}:35357
      memcached_servers = {{ openstack_neutron_controller.controller }}:11211
      auth_type = password
      project_domain_name = {{ openstack_neutron_controller.domain }}
      user_domain_name = {{ openstack_neutron_controller.domain }}
      project_name = service
      username = neutron
      password = {{ openstack_neutron_controller.neutron_pass }}
    state: present

- name: Setting_Config(neutron.conf nova)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[nova"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller nova)"
    block: |
      auth_url = http://{{ openstack_neutron_controller.controller }}:35357
      auth_type = password
      project_domain_name = {{ openstack_neutron_controller.domain }}
      user_domain_name = {{ openstack_neutron_controller.domain }}
      region_name = {{ openstack_neutron_controller.region }}
      project_name = service
      username = nova
      password = {{ openstack_neutron_controller.nova_pass }}
    state: present

- name: Setting_Config(neutron.conf oslo_concurrency)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[oslo_concurrency"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller oslo_concurrency)"
    block: |
      lock_path = /var/lib/neutron/tmp
    state: present

- name: Setting_Config(ml2_conf.ini ml2)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: "^\\[ml2\\]$"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller ml2)"
    block: |
      type_drivers = flat,vlan,vxlan
      tenant_network_types = vxlan
      mechanism_drivers = linuxbridge,l2population
      extension_drivers = port_security
    state: present


- name: Setting_Config(ml2_conf.ini ml2_type_flat)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: "^\\[ml2_type_flat"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller ml2_type_flat)"
    block: |
      flat_networks = provider
    state: present

- name: Setting_Config(ml2_conf.ini ml2_type_vxlan)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: "^\\[ml2_type_vxlan"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller ml2_type_vxlan)"
    block: |
      vni_ranges = 1:1000
    state: present

- name: Setting_Config(ml2_conf.ini securitygroup)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/ml2_conf.ini
    insertafter: "^\\[securitygroup"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller securitygroup)"
    block: |
      enable_ipset = True
    state: present

- name: Setting_Config(linuxbridge_agent.ini linux_bridge)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[linux_bridge"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller linux_bridge)"
    block: |
      physical_interface_mappings = provider:{{ openstack_neutron_controller.provider_ifname }}
    state: present

- name: Setting_Config(linuxbridge_agent.ini vxlan)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[vxlan"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller vxlan)"
    block: |
      enable_vxlan = True
      local_ip = {{ openstack_neutron_controller.overlayif_ip }}
      l2_population = True
    state: present

- name: Setting_Config(linuxbridge_agent.ini securitygroup)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[securitygroup"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller securitygroup)"
    block: |
      enable_security_group = True
      firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
    state: present

- name: Setting_Config(l3_agent.ini DEFAULT)
  blockinfile:
    dest: /etc/neutron/l3_agent.ini
    insertafter: "^\\[DEFAULT"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller DEFAULT)"
    block: |
      interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
      external_network_bridge =
    state: present

- name: Setting_Config(dhcp_agent.ini DEFAULT)
  blockinfile:
    dest: /etc/neutron/dhcp_agent.ini
    insertafter: "^\\[DEFAULT"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller DEFAULT)"
    block: |
      interface_driver = neutron.agent.linux.interface.BridgeInterfaceDriver
      dhcp_driver = neutron.agent.linux.dhcp.Dnsmasq
      enable_isolated_metadata = True
    state: present

- name: Setting_Config(metadata_agent.ini DEFAULT)
  blockinfile:
    dest: /etc/neutron/metadata_agent.ini
    insertafter: "^\\[DEFAULT"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller DEFAULT)"
    block: |
      nova_metadata_ip = {{ openstack_neutron_controller.controller }}
      metadata_proxy_shared_secret = {{ openstack_neutron_controller.metadata_secret }}
    state: present

- name: Setting_Config(nova.conf neutron)
  blockinfile:
    dest: /etc/nova/nova.conf
    insertafter: "^\\[neutron"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_controller neutron)"
    block: |
      url = http://{{ openstack_neutron_controller.controller }}:9696
      auth_url = http://{{ openstack_neutron_controller.controller }}:35357
      auth_type = password
      project_domain_name = {{ openstack_neutron_controller.domain }}
      user_domain_name = {{ openstack_neutron_controller.domain }}
      region_name = {{ openstack_neutron_controller.region }}
      project_name = service
      username = neutron
      password = {{ openstack_neutron_controller.neutron_pass }}
      service_metadata_proxy = True
      metadata_proxy_shared_secret = {{ openstack_neutron_controller.metadata_secret }}
    state: present
  notify: nova-api_restart

- meta: flush_handlers

