---
- name: Setting_Config(DEFAULT)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[DEFAULT"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute DEFAULT)"
    block: |
      rpc_backend = rabbit
      auth_strategy = keystone
    state: present

- name: Setting_Config(oslo_messaging_rabbit)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[oslo_messaging_rabbit"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute oslo_messaging_rabbit)"
    block: |
      rabbit_host = {{ openstack_neutron_compute.controller }}
      rabbit_userid = openstack
      rabbit_password = {{ openstack_neutron_compute.rabbitmq_pass }}
    state: present

- name: Setting_Config(keystone_authtoken)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[keystone_authtoken"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute keystone_authtoken)"
    block: |
      auth_uri = http://{{ openstack_neutron_compute.controller }}:5000
      auth_url = http://{{ openstack_neutron_compute.controller }}:35357
      memcached_servers = {{ openstack_neutron_compute.controller }}:11211
      auth_type = password
      project_domain_name = {{ openstack_neutron_compute.domain }}
      user_domain_name = {{ openstack_neutron_compute.domain }}
      project_name = service
      username = neutron
      password = {{ openstack_neutron_compute.neutron_pass }}
    state: present

- name: Setting_Config(oslo_concurrency)
  blockinfile:
    dest: /etc/neutron/neutron.conf
    insertafter: "^\\[oslo_concurrency"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute oslo_concurrency)"
    block: |
      lock_path = /var/lib/neutron/tmp
    state: present

- name: Setting_Config(linux_bridge)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[linux_bridge"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute linux_bridge)"
    block: |
      physical_interface_mappings = provider:{{ openstack_neutron_compute.provider_ifname }}
    state: present

- name: Setting_Config(vxlan)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[vxlan"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute vxlan)"
    block: |
      enable_vxlan = True
      local_ip = {{ openstack_neutron_compute.overlayif_ip }}
      l2_population = True
    state: present

- name: Setting_Config(securitygroup)
  blockinfile:
    dest: /etc/neutron/plugins/ml2/linuxbridge_agent.ini
    insertafter: "^\\[securitygroup"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute securitygroup)"
    block: |
      enable_security_group = True
      firewall_driver = neutron.agent.linux.iptables_firewall.IptablesFirewallDriver
    state: present

- name: Setting_Config(neutron)
  blockinfile:
    dest: /etc/nova/nova.conf
    insertafter: "^\\[neutron"
    marker: "# {mark} ANSIBLE MANAGED BLOCK (openstack_neutron_compute neutron)"
    block: |
      url = http://{{ openstack_neutron_compute.controller }}:9696
      auth_url = http://{{ openstack_neutron_compute.controller }}:35357
      auth_type = password
      project_domain_name = {{ openstack_neutron_compute.domain }}
      user_domain_name = {{ openstack_neutron_compute.domain }}
      region_name = {{ openstack_neutron_compute.region }}
      project_name = service
      username = neutron
      password = {{ openstack_neutron_compute.neutron_pass }}
    state: present
  notify: restart_nova-compute

- meta: flush_handlers

