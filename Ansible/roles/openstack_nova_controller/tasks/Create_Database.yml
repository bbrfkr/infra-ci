---
- name: Create_Database(check_database_nova)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show databases;" | grep nova
  register: ret_check_database_nova
  changed_when: false
  failed_when: false

- name: Create_Database(create_database_nova)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "CREATE DATABASE nova;"
  when: ret_check_database_nova.rc != 0

- name: Create_Database(check_database_nova_api)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show databases;" | grep nova_api
  register: ret_check_database_nova_api
  changed_when: false
  failed_when: false

- name: Create_Database(create_database_nova_api)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "CREATE DATABASE nova_api;"
  when: ret_check_database_nova_api.rc != 0

- name: Create_Database(nova_check_grant01)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show grants for 'nova'@'localhost'" | grep "ALL PRIVILEGES ON \`nova\`\.\* TO 'nova'@'localhost'"
  register: ret_nova_check_grant01
  changed_when: false
  failed_when: false

- name: Create_Database(nova_grant01)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'localhost' IDENTIFIED BY '{{ openstack_nova_controller.nova_dbpass }}';"
  when: ret_nova_check_grant01.rc != 0

- name: Create_Database(nova_check_grant02)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show grants for 'nova'@'%'" | grep "ALL PRIVILEGES ON \`nova\`\.\* TO 'nova'@'%'"
  register: ret_nova_check_grant02
  changed_when: false
  failed_when: false

- name: Create_Database(nova_grant02)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "GRANT ALL PRIVILEGES ON nova.* TO 'nova'@'%' IDENTIFIED BY '{{ openstack_nova_controller.nova_dbpass }}';"
  when: ret_nova_check_grant02.rc != 0

- name: Create_Database(nova_api_check_grant01)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show grants for 'nova'@'localhost'" | grep "ALL PRIVILEGES ON \`nova_api\`\.\* TO 'nova'@'localhost'"
  register: ret_nova_api_check_grant01
  changed_when: false
  failed_when: false

- name: Create_Database(nova_api_grant01)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'localhost' IDENTIFIED BY '{{ openstack_nova_controller.nova_dbpass }}';"
  when: ret_nova_api_check_grant01.rc != 0

- name: Create_Database(nova_api_check_grant02)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "show grants for 'nova'@'%'" | grep "ALL PRIVILEGES ON \`nova_api\`\.\* TO 'nova'@'%'"
  register: ret_nova_api_check_grant02
  changed_when: false
  failed_when: false

- name: Create_Database(nova_api_grant02)
  shell: mysql -uroot -p{{ openstack_nova_controller.mariadb_pass }} -e "GRANT ALL PRIVILEGES ON nova_api.* TO 'nova'@'%' IDENTIFIED BY '{{ openstack_nova_controller.nova_dbpass }}';"
  when: ret_nova_api_check_grant02.rc != 0

